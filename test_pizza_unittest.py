import unittest
from click.testing import CliRunner
from pizza import order, menu
import itertools


class TestPizza(unittest.TestCase):

    def test_menu(self):
        """
        –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é "menu", –∫–æ—Ç–æ—Ä–∞—è –ø–µ—á–∞—Ç–∞–µ—Ç –º–µ–Ω—é –Ω–∞—à–µ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
        :return:
        """
        runner = CliRunner()
        result = runner.invoke(menu)
        assert result.exit_code == 0
        assert result.output in """Menu:
0 - margherita üßÄ : tomato sauce, mozzarella, tomatoes
1 - pepperoni üçï : tomato sauce, mozzarella, pepperoni
2 - hawaiian üçç : tomato sauce, mozzarella, chicken, pineapples
"""

    def test_order(self):
        """
        –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é "order", –∫–æ—Ç–æ—Ä–∞—è –æ—Ñ–æ—Ä–º–ª—è–µ—Ç –∑–∞–∫–∞–∑ –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –¥–æ—Å—Ç–∞–≤–∫—É –ø–∏—Ü—Ü—ã
        :return:
        """
        pizza_menu = ['pepperoni', 'margherita', 'hawaiian']
        options = [['--delivery', '--'],
                   ['pepperoni', 'margherita', 'hawaiian', 'cheese', '']]
        runner = CliRunner()
        for delivery, pizza_type in itertools.product(*options, repeat=1):
            result = runner.invoke(order, [delivery, pizza_type])
            assert result.exit_code == 0
            if pizza_type in pizza_menu:
                assert 'üç™ –ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞ ' in result.output
                if delivery == '--delivery':
                    assert 'üõ¥ –î–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞ ' in result.output
                else:
                    assert 'üè† –ó–∞–±—Ä–∞–ª–∏ –∑–∞ ' in result.output
            else:
                assert '–ü–∏—Ü—Ü–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–∞—Ü–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –ø–æ–ø–æ–∑–∂–µ.' in result.output


if __name__ == '__main__':
    unittest.main()
