import click
import random
from typing import Callable


def log(pattern: str) -> Callable:
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏
    pattern: –®–∞–±–ª–æ–Ω –≤—ã–≤–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏, –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å "{}"
    """
    def outer_wrapper(func: Callable) -> Callable:
        def wrapped(*args):
            min_time = 1
            max_time = 10
            time = random.randint(min_time, max_time)
            if pattern:
                print(pattern.format(time))
            return func(*args)
        return wrapped
    return outer_wrapper


class Pizza:
    """
    –ö–ª–∞—Å—Å –ü–∏—Ü—Ü–∞

    –ü–æ–ª—è –∫–ª–∞—Å—Å–∞:
    pizza_dict: Dict - —Å–ª–æ–≤–∞—Ä—å —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –≤—Å–µ—Ö –ø–∏—Ü—Ü, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∏ —Ä–µ—Ü–µ–ø—Ç–∞–º–∏
    sizes: List - –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤

    –ü–æ–ª—è –æ–±—ä–µ–∫—Ç–æ–≤:
    name: String - –ù–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã
    size: String - –†–∞–∑–º–µ—Ä –ø–∏—Ü—Ü—ã

    –ú–µ—Ç–æ–¥—ã:
    dict: –ü–µ—á–∞—Ç–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã
    __eq__: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ –¥–≤–∞ –æ–±—ä–µ–∫—Ç–∞ —Ç–∏–ø–∞ –ü–∏—Ü—Ü–∞
    """
    pizzas = {'margherita': {'logo': 'üßÄ', 'recipe': ['tomato sauce', 'mozzarella', 'tomatoes']},
              'pepperoni': {'logo': 'üçï', 'recipe': ['tomato sauce', 'mozzarella', 'pepperoni']},
              'hawaiian': {'logo': 'üçç', 'recipe': ['tomato sauce', 'mozzarella', 'chicken', 'pineapples']}}
    sizes = ['L', 'XL']

    def dict(self):
        """–ü–µ—á–∞—Ç–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã"""
        print(Pizza.pizzas[self.name])

    def __eq__(self, other):
        """–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ –¥–≤–µ –ø–∏—Ü—Ü—ã"""
        if isinstance(other, Pizza):
            return self.name == other.name and self.size == other.size
        return False


class Pepperoni(Pizza):
    def __init__(self, name: str, size='L'):
        super().__init__()
        self.name = name
        if self.name in Pizza.pizzas:
            self.recipe = Pizza.pizzas[self.name]
        else:
            print('–ü–∏—Ü—Ü–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–∞—Ü–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –ø–æ–ø–æ–∑–∂–µ.')
        if size in Pizza.sizes:
            self.size = size
        else:
            print('–ó–∞–¥–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π —Ä–∞–∑–º–µ—Ä!')


class Margherita(Pizza):
    def __init__(self, name: str, size='L'):
        super().__init__()
        self.name = name
        if self.name in Pizza.pizzas:
            self.recipe = Pizza.pizzas[self.name]
        else:
            print('–ü–∏—Ü—Ü–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–∞—Ü–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –ø–æ–ø–æ–∑–∂–µ.')
        if size in Pizza.sizes:
            self.size = size
        else:
            print('–ó–∞–¥–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π —Ä–∞–∑–º–µ—Ä!')


class Hawaiian(Pizza):
    def __init__(self, name: str, size='L'):
        super().__init__()
        self.name = name
        if self.name in Pizza.pizzas:
            self.recipe = Pizza.pizzas[self.name]
        else:
            print('–ü–∏—Ü—Ü–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–∞—Ü–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –ø–æ–ø–æ–∑–∂–µ.')
        if size in Pizza.sizes:
            self.size = size
        else:
            print('–ó–∞–¥–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π —Ä–∞–∑–º–µ—Ä!')


@log('üç™ –ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞ {}c!')
def bake(pizza: Pizza):
    """–ì–æ—Ç–æ–≤–∏—Ç –ø–∏—Ü—Ü—É"""


@log('üõ¥ –î–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞ {}c!')
def delivery_pizza(pizza: Pizza):
    """–î–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É"""


@log('üè† –ó–∞–±—Ä–∞–ª–∏ –∑–∞ {}c!')
def pickup(pizza: Pizza):
    """–°–∞–º–æ–≤—ã–≤–æ–∑"""


@click.group()
def cli():
    pass


@cli.command()
@click.option('--delivery', default=False, is_flag=True)
@click.argument('pizza', nargs=1)
def order(pizza: str, delivery: bool):
    """–ì–æ—Ç–æ–≤–∏—Ç –∏ –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É"""
    pizza_menu = {'margherita': Margherita,
                  'pepperoni': Pepperoni,
                  'hawaiian': Hawaiian}
    if pizza in pizza_menu:
        hot_pizza = pizza_menu[pizza](pizza)
        bake(hot_pizza)
        if delivery:
            delivery_pizza(hot_pizza)
        else:
            pickup(hot_pizza)
    else:
        print('–ü–∏—Ü—Ü–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–∞—Ü–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –ø–æ–ø–æ–∑–∂–µ.')


@cli.command()
def menu():
    """–í—ã–≤–æ–¥–∏—Ç –º–µ–Ω—é"""
    print('Menu:')
    for i, item in enumerate(Pizza.pizzas):
        pizza = Pizza.pizzas[item]
        print(f"{i} - {item} {pizza['logo']} : {', '.join([word for word in pizza['recipe']])}")


if __name__ == '__main__':
    cli()
