import click
import random
from typing import Callable


def log(func: Callable) -> Callable:
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏"""
    def wrapped(*args):
        pattern = {'bake': 'üç™ –ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞ ',
                   'delivery_pizza': 'üõ¥ –î–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞ ',
                   'pickup': 'üè† –ó–∞–±—Ä–∞–ª–∏ –∑–∞ '}
        min_time = 1
        max_time = 10
        time = random.randint(min_time, max_time)
        if func.__name__ in pattern:
            print(f'{pattern[func.__name__]}{time}c!')

        return func(*args)
    return wrapped


class Pizza:
    """
    –ö–ª–∞—Å—Å –ü–∏—Ü—Ü–∞

    –ü–æ–ª—è –∫–ª–∞—Å—Å–∞:
    pizza_dict: Dict - —Å–ª–æ–≤–∞—Ä—å —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –≤—Å–µ—Ö –ø–∏—Ü—Ü, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∏ —Ä–µ—Ü–µ–ø—Ç–∞–º–∏
    sizes: List - –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤

    –ü–æ–ª—è –æ–±—ä–µ–∫—Ç–æ–≤:
    name: String - –ù–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã
    size: String - –†–∞–∑–º–µ—Ä –ø–∏—Ü—Ü—ã

    –ú–µ—Ç–æ–¥—ã:
    dict: –ü–µ—á–∞—Ç–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã
    __eq__: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ –¥–≤–∞ –æ–±—ä–µ–∫—Ç–∞ —Ç–∏–ø–∞ –ü–∏—Ü—Ü–∞
    """
    pizzas = {'Margherita': {'logo': 'üßÄ', 'recipe': ['tomato sauce', 'mozzarella', 'tomatoes']},
              'Pepperoni': {'logo': 'üçï', 'recipe': ['tomato sauce', 'mozzarella', 'pepperoni']},
              'Hawaiian': {'logo': 'üçç', 'recipe': ['tomato sauce', 'mozzarella', 'chicken', 'pineapples']}}
    sizes = ['L', 'XL']

    def __init__(self, name: str, size='L'):
        self.name = name
        if size in Pizza.sizes:
            self.size = size
        else:
            print('–ó–∞–¥–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π —Ä–∞–∑–º–µ—Ä!')

    def dict(self):
        """–ü–µ—á–∞—Ç–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã"""
        print(Pizza.pizzas[self.name])

    def __eq__(self, other):
        """–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ –¥–≤–µ –ø–∏—Ü—Ü—ã"""
        if isinstance(other, Pizza):
            return self.name == other.name and self.size == other.size
        return False


@log
def bake(pizza):
    """–ì–æ—Ç–æ–≤–∏—Ç –ø–∏—Ü—Ü—É"""


@log
def delivery_pizza(pizza):
    """–î–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É"""


@log
def pickup(pizza):
    """–°–∞–º–æ–≤—ã–≤–æ–∑"""


@click.group()
def cli():
    pass


@cli.command()
@click.option('--delivery', default=False, is_flag=True)
@click.argument('pizza', nargs=1)
def order(pizza: str, delivery: bool):
    """–ì–æ—Ç–æ–≤–∏—Ç –∏ –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É"""
    hot_pizza = Pizza(pizza)
    bake(hot_pizza)
    if delivery:
        delivery_pizza(hot_pizza)
    else:
        pickup(hot_pizza)


@cli.command()
def menu():
    """–í—ã—ã–æ–¥–∏—Ç –º–µ–Ω—é"""
    print('Menu:')
    for i, item in enumerate(Pizza.pizzas):
        pizza = Pizza.pizzas[item]
        print(f"{i} - {item} {pizza['logo']} : {', '.join([word for word in pizza['recipe']])}")


if __name__ == '__main__':
    cli()
